@import "../../variables.scss";

@function will-wrap($board-size, $move-section-width) {
  // Calculate the total width of the flex items (including margin)
  $total-width: calc(#{$board-size} + #{$move-section-width});

  // Get the width of the window
  $window-width: 100vw;

  @return true;
}

.game-page {
  display: flex;
  justify-content: center;
  align-items: center;

  flex-wrap: wrap;

  height: 100dvh;
  overflow-y: scroll;
  @include cool-scrollbar;

  margin-left: calc(#{$move-section-width} / 2);
  @media (max-width: $mobile-breakpoint) {
    margin-left: calc(#{$eval-bar-width} / -2);
    gap: 5px;
  }

  gap: 0;

  &__menu {
    $selected-outline-size: 4px;

    overflow-y: scroll;
    @include cool-scrollbar;

    text-align: center;
    background-color: $black;
    padding: 25px;
    color: $white;

    gap: 25px;

    .menu-team {
      display: flex;
      justify-content: center;
      align-items: center;

      img {
        width: $square-size;
        cursor: pointer;
        padding: 5px;
      }
    }

    .menu-time-control-presets {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 10px;

      button {
        border: 1px solid $white;
        background-color: $black;
        color: $white;
        font-size: 1.2rem;
        padding: 1rem 2rem;

        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        margin: 0;

        &[data-selected="true"] {
          outline: $selected-outline-size solid $best;
        }

        svg {
          padding: 12px;
        }
      }
    }

    button {
      transition: 0.2s;

      &[data-selected="true"] {
        outline: $selected-outline-size solid $best;
      }

      &[data-selected="false"] {
        &:hover {
          outline: $selected-outline-size solid $white;
        }
      }

      &:active {
        outline: $selected-outline-size solid $blunder !important;
        transform: scale(0.95);
      }
    }

    .menu-team-btn {
      transition: 0.2s;
      user-select: none;
      margin: calc(#{$selected-outline-size} * 2);
    }

    .menu-play-btn {
      border: 1px solid $white;
      background-color: $black;
      color: $white;
      font-size: 1.2rem;
      padding: 1rem 2rem;
      margin: 50px auto 0 auto;
      width: 100%;

      transition: 0.2s;
      &:hover {
        background-color: $best;
      }

      &:disabled {
        background-color: $black;
        color: darken($white, 50%);
        border: 1px solid darken($white, 50%);

        cursor: not-allowed;

        &:hover {
          background-color: $black;
        }

        &:active {
          transform: none;
          outline: none !important;
        }
      }
    }
  }

  .clock-wrapper {
    position: absolute;

    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: $square-size;

    z-index: 10;

    // I want it 1 square size away from the board
    // To get the left of the board, it's half of the screen size minus half of the board size
    left: calc(50vw - #{$board-size / 2});

    // Since the left gives me the left, I still need to translate it by the clock size, + another square size
    transform: translateX(calc(-100% - #{$square-size} * 2));

    &[data-flipped="true"] {
      flex-direction: column-reverse;
    }

    @media (max-width: $mobile-breakpoint) {
      position: static;
      flex-direction: row;
      transform: none;
      gap: 0;
      justify-content: space-between;

      width: $board-size;
      margin-left: calc(#{$board-margin} + #{$eval-bar-width});

      &[data-flipped="true"] {
        flex-direction: row-reverse;
      }
    }
  }
}

.ai-time-limit {
  &-input-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  text-align: center;

  input {
    position: relative;

    @mixin spinner {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      margin: auto;
    }

    &::-moz-number-spinners {
      @include spinner;
    }

    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
      @include spinner;
    }

    text-align: center;

    background-color: transparent;
    border: none;
    color: $white;

    font-size: 1.5rem;
    width: auto;
    display: flex;

    box-sizing: border-box;

    &:focus {
      outline: none;
    }
  }
}
